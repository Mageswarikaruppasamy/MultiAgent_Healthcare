{
  "name": "greeting_agent",
  "version": "1.0.0",
  "description": "Greets users personally and validates user ID against the database",
  "type": "agent",
  "category": "authentication",
  "inputs": {
    "type": "object",
    "properties": {
      "user_id": {
        "type": "integer",
        "description": "User ID to validate and greet (1-100)",
        "minimum": 1,
        "maximum": 100,
        "required": true
      }
    },
    "required": ["user_id"]
  },
  "outputs": {
    "type": "object",
    "properties": {
      "success": {
        "type": "boolean",
        "description": "Whether the greeting was successful"
      },
      "message": {
        "type": "string",
        "description": "Greeting message or error message"
      },
      "user_info": {
        "type": "object",
        "description": "User information if successful",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "User's first name"
          },
          "last_name": {
            "type": "string",
            "description": "User's last name"
          },
          "city": {
            "type": "string",
            "description": "User's city"
          },
          "dietary_preference": {
            "type": "string",
            "enum": ["vegetarian", "non-vegetarian", "vegan"],
            "description": "User's dietary preference"
          },
          "medical_conditions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user's medical conditions"
          },
          "physical_limitations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user's physical limitations"
          }
        }
      },
      "action": {
        "type": "string",
        "enum": ["request_user_id", "show_dashboard"],
        "description": "Next action to take"
      }
    },
    "required": ["success", "message"]
  },
  "flow": {
    "entry_point": true,
    "next_agents": ["mood_tracker_agent", "cgm_agent", "food_intake_agent", "meal_planner_agent"],
    "interrupt_handler": "interrupt_agent"
  },
  "database": {
    "tables": ["users"],
    "operations": ["SELECT"]
  },
  "error_handling": {
    "invalid_user_id": {
      "message": "User ID {user_id} not found. Please enter a valid user ID (1-100).",
      "retry": true
    },
    "database_error": {
      "message": "Unable to retrieve user information. Please try again.",
      "retry": true
    }
  },
  "examples": [
    {
      "input": {
        "user_id": 1
      },
      "output": {
        "success": true,
        "message": "Hello Alice! ðŸ‘‹ Welcome to your personalized health companion...",
        "user_info": {
          "first_name": "Alice",
          "last_name": "Johnson",
          "city": "New York",
          "dietary_preference": "vegetarian",
          "medical_conditions": ["Type 2 Diabetes"],
          "physical_limitations": ["None"]
        },
        "action": "show_dashboard"
      }
    },
    {
      "input": {
        "user_id": 999
      },
      "output": {
        "success": false,
        "message": "User ID 999 not found. Please enter a valid user ID (1-100).",
        "action": "request_user_id"
      }
    }
  ]
}